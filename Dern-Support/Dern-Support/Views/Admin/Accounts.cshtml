@{
    ViewData["Title"] = "User Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - DernSupport</title>
    


    <style>
        /* ===== Admin Section Styling ===== */

        * {
            font-family: "DM Sans", sans-serif;
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        .admin-content {
            font-family: Arial, sans-serif;
            padding: 30px;
           
         
            max-width: var(--max-width);
            margin: auto;
        }

        .user-list {
            margin-bottom: 50px;
        }

            .user-list h3 {
                font-size: 1.75rem;
                color: var(--primary-color-dark);
                margin-bottom: 20px;
            }

            .user-list table {
                width: 100%;
                border-collapse: collapse;
                background-color: var(--white);
                border-radius: 10px;
                overflow: hidden;
                box-shadow: 0 7px 25px rgba(0, 0, 0, 0.1);

            }

            .user-list th, .user-list td {
                padding: 15px;
                text-align: left;
            }

            .user-list thead {
                background-color: var(--primary-color);
                color: var(--white);
            }

            .user-list tbody tr {
                border-bottom: 1px solid #eee;
            }

                .user-list tbody tr:hover {
                    
                    color: var(--white);
                }

                .user-list tbody tr td {
                    color: var(--text-dark);
                }

        .form-container {
            padding: 30px;
            background-color: var(--white);
            border-radius: 20px;
            box-shadow: 0 7px 25px rgba(0, 0, 0, 0.1);
        }

            .form-container h3 {
                font-size: 1.75rem;
                color: var(--primary-color-dark);
                margin-bottom: 20px;
            }

            .form-container .form-group {
                margin-bottom: 20px;
            }

            .form-container label {
                font-size: 1rem;
                color: var(--text-light);
            }

            .form-container input, .form-container select {
                width: 100%;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
                font-size: 1rem;
                color: var(--text-dark);
                outline: none;
            }

                .form-container input:focus, .form-container select:focus {
                    border-color: var(--primary-color-dark);
                }

            .form-container button {
                width: 100%;
                padding: 15px;
                background-color: var(--primary-color);
                color: var(--white);
                border: none;
                border-radius: 5px;
                font-size: 1rem;
                cursor: pointer;
            }

                .form-container button:hover {
                    background-color: var(--primary-color-dark);
                }

        #resultMessage {
            margin-top: 20px;
            font-size: 1rem;
            color: var(--text-dark);
        }

    </style>




</head>
<body>

    <section class="admin-content">
       

        <!-- Create User Form -->
        <div class="form-container">
            <h2>Create New User</h2>
            <form id="createUserForm" method="post">
                <div class="form-group">
                    <label for="Username">Username</label>
                    <input type="text" class="form-control" id="Username" name="Username" required />
                </div>
                <div class="form-group">
                    <label for="FirstName">First Name</label>
                    <input type="text" class="form-control" id="FirstName" name="FirstName" required />
                </div>
                <div class="form-group">
                    <label for="LastName">Last Name</label>
                    <input type="text" class="form-control" id="LastName" name="LastName" required />
                </div>
                <div class="form-group">
                    <label for="Email">Email</label>
                    <input type="email" class="form-control" id="Email" name="Email" required />
                </div>
                <div class="form-group">
                    <label for="Password">Password</label>
                    <input type="password" class="form-control" id="Password" name="Password" required />
                </div>
                <div class="form-group">
                    <label for="Role">Role</label>
                    <select class="form-control" id="Role" name="Role" required>
                        <option value="Admin">Admin</option>
                        <option value="Customer">Customer</option>
                        <option value="Technician">Technician</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">Create User</button>
            </form>
            <div id="resultMessage" class="mt-3"></div>
        </div>

        <!-- User List Section -->
        <div class="user-list">
            <br />  <br />
            <h3>Users</h3>
            <table>
                <thead>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Email</th>
                        <th>Role</th>
                    </tr>
                </thead>
                <tbody id="user-table-body">
                    <!-- Users will be dynamically loaded here -->
                </tbody>
            </table>
        </div>
    </section>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            loadUsers();

            // Load all users
            async function loadUsers() {
                try {
                    const response = await fetch('/api/UserAccounts', {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': 'Bearer ' + localStorage.getItem('token') // Add token if required
                        }
                    });

                    if (!response.ok) {
                        throw new Error('Failed to load users');
                    }

                    const users = await response.json();
                    const userTableBody = document.getElementById('user-table-body');
                    userTableBody.innerHTML = '';

                    users.forEach(user => {
                        const row = document.createElement('tr');

                        row.innerHTML = `
                                    <td>${user.firstName}</td>
                                    <td>${user.lastName}</td>
                                    <td>${user.email}</td>
                                    <td>${user.role}</td>
                                `;

                        userTableBody.appendChild(row);
                    });
                } catch (error) {
                    console.error('Error loading users:', error);
                }
            }

            // Handle form submission to create a new user
            document.getElementById('createUserForm').addEventListener('submit', async function (event) {
                event.preventDefault();

                const formData = new FormData(this);
                const userDto = {
                    Username: formData.get('Username'),
                    FirstName: formData.get('FirstName'),
                    LastName: formData.get('LastName'),
                    Email: formData.get('Email'),
                    Password: formData.get('Password'),
                    Role: formData.get('Role')
                };

                try {
                    const response = await fetch('/api/Admin/CreateUser', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': 'Bearer ' + localStorage.getItem('token') // If needed
                        },
                        body: JSON.stringify(userDto)
                    });

                    const result = await response.text();

                    if (response.ok) {
                        document.getElementById('resultMessage').textContent = 'User created successfully.';
                        document.getElementById('resultMessage').style.color = 'green';
                        // Reset the form after successful creation
                        document.getElementById('createUserForm').reset();
                        loadUsers(); // Refresh the user list
                    } else {
                        document.getElementById('resultMessage').textContent = result || 'Failed to create user.';
                        document.getElementById('resultMessage').style.color = 'red';
                    }
                } catch (error) {
                    document.getElementById('resultMessage').textContent = 'An error occurred while creating the user.';
                    document.getElementById('resultMessage').style.color = 'red';
                }
            });
        });
    </script>
</body>
</html>
